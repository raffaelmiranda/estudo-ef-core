// <auto-generated />
using System;
using EntidadesRelacionadas.Console.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntidadesRelacionadas.Console.Migrations
{
    [DbContext(typeof(EfCoreContext))]
    partial class EfCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hermann@email.com",
                            Nome = "Hermann Hesse "
                        },
                        new
                        {
                            Id = 2,
                            Email = "agaha@email.com",
                            Nome = "Agatha Christie"
                        },
                        new
                        {
                            Id = 3,
                            Email = "coelho@email.com",
                            Nome = "Paulo Coelho"
                        },
                        new
                        {
                            Id = 4,
                            Email = "tolstoy@email.com",
                            Nome = "Leon Tolstoy"
                        },
                        new
                        {
                            Id = 5,
                            Email = "fernando@email.com",
                            Nome = "Fernando Pessoa"
                        });
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Biografia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("BiografiaAutor")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId")
                        .IsUnique();

                    b.ToTable("Biografias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            BiografiaAutor = "Herman Hesse",
                            DataNascimento = new DateTime(1877, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidade = "Alemanha"
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            BiografiaAutor = "Agatha Christie",
                            DataNascimento = new DateTime(1890, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidade = "Inglaterra"
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            BiografiaAutor = "Paulo Coelho",
                            DataNascimento = new DateTime(1847, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidade = "Brasil"
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            BiografiaAutor = "Leon Tolstoy",
                            DataNascimento = new DateTime(1828, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidade = "Russia"
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 5,
                            BiografiaAutor = "Fernando Pessoa",
                            DataNascimento = new DateTime(1900, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidade = "Portugal"
                        });
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Editor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Editores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Amazon"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Americanas"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Saraiva"
                        });
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("EditorId");

                    b.ToTable("Livros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnoLancamento = 1922,
                            AutorId = 1,
                            EditorId = 1,
                            Tipo = "Romance",
                            Titulo = "Sidarta"
                        },
                        new
                        {
                            Id = 2,
                            AnoLancamento = 1919,
                            AutorId = 1,
                            EditorId = 1,
                            Tipo = "Romance",
                            Titulo = "Demain"
                        },
                        new
                        {
                            Id = 3,
                            AnoLancamento = 1934,
                            AutorId = 2,
                            EditorId = 1,
                            Tipo = "Romance",
                            Titulo = "Assassinato no Oriente Express"
                        },
                        new
                        {
                            Id = 4,
                            AnoLancamento = 1968,
                            AutorId = 2,
                            EditorId = 1,
                            Tipo = "Romance",
                            Titulo = "O caso dos dez negrinhos"
                        },
                        new
                        {
                            Id = 5,
                            AnoLancamento = 1988,
                            AutorId = 3,
                            EditorId = 1,
                            Tipo = "Romance",
                            Titulo = "O Alquimista"
                        },
                        new
                        {
                            Id = 6,
                            AnoLancamento = 1977,
                            AutorId = 4,
                            EditorId = 2,
                            Tipo = "Romance",
                            Titulo = "Ana Karenina"
                        },
                        new
                        {
                            Id = 7,
                            AnoLancamento = 1967,
                            AutorId = 4,
                            EditorId = 2,
                            Tipo = "Romance",
                            Titulo = "Guerra e Paz"
                        },
                        new
                        {
                            Id = 8,
                            AnoLancamento = 1925,
                            AutorId = 5,
                            EditorId = 1,
                            Tipo = "Poesias",
                            Titulo = "O Guardador de rebanhos"
                        },
                        new
                        {
                            Id = 9,
                            AnoLancamento = 1930,
                            AutorId = 5,
                            EditorId = 3,
                            Tipo = "Poesias",
                            Titulo = "Poesias"
                        },
                        new
                        {
                            Id = 10,
                            AnoLancamento = 1939,
                            AutorId = 4,
                            EditorId = 3,
                            Tipo = "Ficção",
                            Titulo = "E não sobrou nenhum"
                        },
                        new
                        {
                            Id = 11,
                            AnoLancamento = 1927,
                            AutorId = 1,
                            EditorId = 3,
                            Tipo = "Romance",
                            Titulo = "O lobo da estepe"
                        });
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Biografia", b =>
                {
                    b.HasOne("EntidadesRelacionadas.Console.Domain.Autor", "Autor")
                        .WithOne("Biografia")
                        .HasForeignKey("EntidadesRelacionadas.Console.Domain.Biografia", "AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Livro", b =>
                {
                    b.HasOne("EntidadesRelacionadas.Console.Domain.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntidadesRelacionadas.Console.Domain.Editor", "Editor")
                        .WithMany("Livros")
                        .HasForeignKey("EditorId");

                    b.Navigation("Autor");

                    b.Navigation("Editor");
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Autor", b =>
                {
                    b.Navigation("Biografia");

                    b.Navigation("Livros");
                });

            modelBuilder.Entity("EntidadesRelacionadas.Console.Domain.Editor", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
