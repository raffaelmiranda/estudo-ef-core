// <auto-generated />
using EntidadesDesconectadas.Console.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntidadesDesconectadas.Console.Migrations
{
    [DbContext(typeof(EfCoreContext))]
    partial class EfCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlunoId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("AlunoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            Nome = "Maria"
                        },
                        new
                        {
                            AlunoId = 2,
                            Nome = "Janice"
                        },
                        new
                        {
                            AlunoId = 3,
                            Nome = "Jefferson"
                        },
                        new
                        {
                            AlunoId = 4,
                            Nome = "Jessica"
                        },
                        new
                        {
                            AlunoId = 5,
                            Nome = "Pedro"
                        });
                });

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"), 1L, 1);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CursoId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            AlunoId = 1,
                            Nome = "Matematica"
                        },
                        new
                        {
                            CursoId = 2,
                            AlunoId = 4,
                            Nome = "Moda"
                        },
                        new
                        {
                            CursoId = 3,
                            AlunoId = 2,
                            Nome = "Web Design"
                        },
                        new
                        {
                            CursoId = 4,
                            AlunoId = 3,
                            Nome = "Engenharia"
                        },
                        new
                        {
                            CursoId = 5,
                            AlunoId = 4,
                            Nome = "Musica"
                        });
                });

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"), 1L, 1);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoId = 1,
                            AlunoId = 4,
                            Cidade = "Goiânia",
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoId = 2,
                            AlunoId = 2,
                            Cidade = "São Paulo",
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoId = 3,
                            AlunoId = 1,
                            Cidade = "Santos",
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoId = 4,
                            AlunoId = 3,
                            Cidade = "Toronto",
                            Pais = "Canada"
                        },
                        new
                        {
                            EnderecoId = 5,
                            AlunoId = 5,
                            Cidade = "Lins",
                            Pais = "Brasil"
                        });
                });

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Curso", b =>
                {
                    b.HasOne("EntidadesDesconectadas.Console.Domain.Aluno", "Aluno")
                        .WithMany("Cursos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Endereco", b =>
                {
                    b.HasOne("EntidadesDesconectadas.Console.Domain.Aluno", "Aluno")
                        .WithOne("Endereco")
                        .HasForeignKey("EntidadesDesconectadas.Console.Domain.Endereco", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EntidadesDesconectadas.Console.Domain.Aluno", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
